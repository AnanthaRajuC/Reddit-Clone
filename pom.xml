<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>io.github.anantharajuc</groupId>
	<artifactId>Reddit-Clone</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>Reddit-Clone</name>
	<description>Reddit Clone</description>
	
	<!-- Start - Project Owner -->
	<developers>
		<developer>
			<name>Anantha Raju C</name>
			<email>arcswdev@gmail.com</email>
			<timezone>UTC+05:30</timezone>
		</developer>
	</developers>
	<!-- End - Project Owner -->
	
	<!-- Start - Source Repository -->
    <scm>
        <connection>https://github.com/Spring-Boot-Framework/Reddit-Clone.git</connection>
        <developerConnection>git@github.com:Spring-Boot-Framework/Reddit-Clone.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <!-- End - Source Repository -->
    
    <!-- Start - Issue Management -->
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/Spring-Boot-Framework/Reddit-Clone/issues</url>
    </issueManagement>
    <!-- End - Issue Management -->

	<properties>
		<java.version>1.8</java.version>
		<modelmapper.version>2.3.8</modelmapper.version>
		<jjwt-api.version>0.11.2</jjwt-api.version>
		<jjwt-impl.version>0.11.2</jjwt-impl.version>
		<jjwt-jackson.version>0.11.2</jjwt-jackson.version>
		<hibernate-validator.version>6.1.6.Final</hibernate-validator.version>
		<hibernate-validator-annotation-processor.version>6.1.6.Final</hibernate-validator-annotation-processor.version>
		<springfox-swagger2.version>2.9.2</springfox-swagger2.version>
		<springfox-swagger-ui.version>3.0.0</springfox-swagger-ui.version>
	</properties>

	<dependencies>
	
		<!-- Persist data in SQL stores with Java Persistence API using Spring Data and Hibernate. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!-- Send email using Java Mail and Spring Framework's JavaMailSender. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		
		<!-- Highly customizable authentication and access-control framework for Spring applications. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<!-- Build web, including RESTful, applications using Spring MVC. Uses Apache Tomcat as the default embedded container. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- Supports built in (or custom) endpoints that let you monitor and manage your application - such as application health, metrics, sessions, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!-- A modern server-side Java template engine for both web and standalone environments. Allows HTML to be correctly displayed in browsers and as static prototypes. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Provides fast application restarts, LiveReload, and configurations for enhanced development experience. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Start - API documentation with Swagger -->
		<!-- Swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-swagger2.version}</version>
		</dependency>
		<!-- Swagger UI -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-swagger-ui.version}</version>
		</dependency>
		<!-- End - API documentation with Swagger -->
		
		<!-- Java annotation library which helps to reduce boilerplate code. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- MySQL JDBC and R2DBC driver. -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- Database migration. -->
		<dependency>
	      	<groupId>org.flywaydb</groupId>
	      	<artifactId>flyway-core</artifactId>
	    </dependency>
	    
	    <!-- Object Mapping -->
	    <dependency>
            <groupId>org.modelmapper</groupId>
            <artifactId>modelmapper</artifactId>
            <version>${modelmapper.version}</version>
        </dependency>
        
        <dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator</artifactId>
		    <version>${hibernate-validator.version}</version>
		</dependency>
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-validator-annotation-processor</artifactId>
		    <version>${hibernate-validator-annotation-processor.version}</version>
		</dependency>
	    
	    <!-- JWT dependencies START -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jjwt-api.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <scope>runtime</scope>
            <version>${jjwt-impl.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <scope>runtime</scope>
            <version>${jjwt-jackson.version}</version>
        </dependency>
        <!-- JWT dependencies END -->
        
	</dependencies>
	
	<build>
		<plugins>
			<!-- Package as an executable jar/war. -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!--  The Javadoc Plugin uses the Javadoc tool to generate javadocs for the specified project. -->
			<plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-javadoc-plugin</artifactId>
	            <configuration>
	                <source>1.8</source>
	                <target>1.8</target>
	            </configuration>
	        </plugin>
		</plugins>
	</build>

</project>
